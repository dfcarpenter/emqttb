name: Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      tag:
        type: string
        required: true
      dryrun:
        type: boolean
        required: true
        default: false

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        otp:
          - "24.3.4.2-1"
        quic_support:
          - false
        os:
          - ubuntu22.04
          - ubuntu20.04
          - ubuntu18.04
          - ubuntu16.04
          - debian11
          - debian10
          - debian9
          - el7
          - el8
          - amzn2
    container:
      image: ghcr.io/emqx/emqx-builder/5.0-27:1.13.4-${{ matrix.otp }}-${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - shell: bash
        run: |
          [ "false" == ${{ matrix.quic_support }} ] && export BUILD_WITHOUT_QUIC=1
          make release
      - if: failure()
        run: cat rebar3.crashdump
      - run: ./_build/default/bin/emqttb
      - uses: actions/upload-artifact@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: packages
          path: ./*.tar.gz

  mac:
    strategy:
      fail-fast: false
      matrix:
        macos:
          - macos-12
        otp:
          - "24"

    runs-on: ${{ matrix.macos }}

    steps:
      - uses: actions/checkout@v3
      - id: prepare
        shell: bash
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_INSTALL_UPGRADE: 1
          HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
        run: |
          brew install coreutils erlang@${{ matrix.otp }}
          brew link erlang@${{ matrix.otp }}
          git clone --depth=1 https://github.com/erlang/rebar3.git
          cd rebar3
          ./bootstrap
          ./rebar3 local install
          echo "$HOME/.cache/rebar3/bin" >> $GITHUB_PATH
      - name: build
        shell: bash
        env:
          BUILD_WITHOUT_QUIC: 1
        run: |
          make release
      - if: failure()
        run: cat rebar3.crashdump
      - run: ./_build/default/bin/emqttb
      - uses: actions/upload-artifact@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: packages
          path: ./*.tar.gz

  release:
    runs-on: ubuntu-latest
    needs:
      - linux
      - mac
    if: startsWith(github.ref, 'refs/tags/') && !inputs.dryrun

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: packages
          path: packages
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: EMQTT bench daemon ${{ github.ref }} Released
          body: EMQTT bench daemon ${{ github.ref }} Released
          draft: false
          prerelease: false
      - uses: Rory-Z/upload-release-asset@v1
        with:
          repo: emqttb
          path: "packages/emqttb-*"
          token: ${{ github.token }}
